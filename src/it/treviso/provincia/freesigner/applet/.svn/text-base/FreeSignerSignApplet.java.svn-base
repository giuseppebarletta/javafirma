package it.treviso.provincia.freesigner.applet;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/* 
 * TODO: implementare rilevamento anticipato della libreria pkcs11wrapper.dll
 * in modo da evitare che l'utente prosegua senza la libreria. Implementare la possibilit√†
 * di lanciare un tool di installazione della libreria.
 */


/**
 * FreeSignerSignApplet
 * 
 * @author lorenzettoluca
 */
@SuppressWarnings("serial")
public class FreeSignerSignApplet extends javax.swing.JApplet {

    /** Initializes the applet FreeSignerApplet */
    public void init() {
    	try {
    		System.loadLibrary("pkcs11wrapper");
    	} catch (UnsatisfiedLinkError ue) {
    		JOptionPane.showMessageDialog(null, "Libreria pkcs11wrapper mancante\n" +
    				"Procedere con l\'installazione della libreria ed " +
    				"eseguire nuovamente l\'applicazione", "Errore", JOptionPane.ERROR_MESSAGE);
    		System.out.println(System.getProperty("java.library.path"));
    		ue.printStackTrace();
    		System.exit(ERROR);
    	} catch (SecurityException se){
    		JOptionPane.showMessageDialog(null, "Impossibile caricare la libreria per problemi di sicurezza. " +
    				"Contattare l'amministratore.","Eccezione di sicurezza", JOptionPane.ERROR_MESSAGE);
    		System.exit(ERROR);
    	}
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    private void initComponents() {
    	

        jButton1 = new JButton();
        jButton2 = new JButton();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();

        jButton1.setText("Visualizza Documento");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Firma");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Firma digitale del documento:");

        if ((this.getParameter("filename")!=null) && ((new File(this.getParameter("filename"))).exists())) {
        	this.FILE_NAME = this.getParameter("filename");
        } else {
        	FILE_NAME = "File non specificato o non esistente!";
            jButton2.setEnabled(false);
            jButton1.setEnabled(false);
        }
        
        if (this.getParameter("devlib")!=null) {
        	this.LIB=this.getParameter("devlib");
        }
        
        jLabel2.setText(FILE_NAME);
        

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(50, 50, 50)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(33, 33, 33))
        );
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        FreeSignerSignApplet1 frame = new FreeSignerSignApplet1();
        frame.sign(FILE_NAME,LIB);
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
    	JOptionPane.showMessageDialog(null, "Il file si trova in "+FILE_NAME, "Avviso", JOptionPane.PLAIN_MESSAGE);
    }

    public void jButton2SetClickable() {
    	jButton2.setEnabled(true);
    }

    private String FILE_NAME = "/home/PROV2003/lorenzettoluca/richiesta_fw_20110920.pdf";
	private String LIB = "/usr/lib/libbit4ipki.so";
    private JButton jButton1;
    private JButton jButton2;
    private JLabel jLabel1;
    private JLabel jLabel2;

}